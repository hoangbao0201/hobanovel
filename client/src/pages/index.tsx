import Head from "next/head";
import { ReactNode } from "react";
import { GetServerSideProps, GetStaticProps, NextPage } from "next";

import { REVALIDATE_TIME } from "@/constants";
import MainLayout from "@/components/Layout/MainLayout";
import { getNovelsByPageHandle } from "@/services/novels.services";
import Outstanding from "@/components/Share/Outstanding";
import { NovelType, ReviewType } from "@/types";
import JustUpdated from "@/components/Share/JustUpdated";
import Reading from "@/components/Share/Reading";
import HighlyRated from "@/components/Share/HighlyRated";
import LatestReviews from "@/components/Share/LatestReviews";
import JustCompleted from "@/components/Share/JustCompleted";
import JustPosted from "@/components/Share/JustPosted";
import { getReviewsByLatestHandle } from "@/services/review.services";
import WrapperLayout from "@/components/Layout/WrapperLayout";


export interface PageHomeProps {
    novelsOutstending?: NovelType[]
    novelsJustUpdated?: NovelType[]
    novelsReading?: NovelType[]
    novelsHighlyRated?: NovelType[]
    novelsLatestReviews?: ReviewType[]
    novelsJustCompleted?: NovelType[]
}

const HomePage = ({ novelsOutstending, novelsJustUpdated, novelsReading, novelsHighlyRated, novelsLatestReviews, novelsJustCompleted } : PageHomeProps ) => {

    console.log("novelsLatestReviews", novelsLatestReviews)

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>

                <WrapperLayout>
                    <div className="flex flex-col lg:flex-row">
                        <div className="lg:w-8/12">
                            <Outstanding novels={novelsOutstending}/>
                        </div>
                        <div className="lg:w-4/12 hidden lg:block">
                            <Reading novels={novelsReading}/>
                        </div>
                    </div>
                    <div className="hidden xl:block">
                        <JustUpdated novels={novelsJustUpdated}/>
                    </div>
                    <div className="flex flex-col lg:flex-row my-6">
                        <div className="lg:w-8/12">
                            <HighlyRated novels={novelsHighlyRated}/>
                        </div>
                        <div className="lg:w-4/12">
                            <LatestReviews reviews={novelsLatestReviews}/>
                        </div>
                    </div>
                    <div className="hidden lg:flex flex-col lg:flex-row my-6">
                        <div className="lg:w-4/12">
                            <JustPosted novels={novelsHighlyRated}/>
                        </div>
                        <div className="lg:w-8/12">
                            <JustCompleted novels={novelsJustCompleted}/>
                        </div>
                    </div>
                </WrapperLayout>

            </main>
        </>
    );
}

export const getStaticProps : GetStaticProps = async () => {

    const novelsResponse = await getNovelsByPageHandle("1");
    const reviewsResponse = await getReviewsByLatestHandle("1")

    return {
        props: {
            novelsOutstending: novelsResponse?.data.novels || null,
            novelsJustUpdated: novelsResponse?.data.novels || null,
            novelsReading: novelsResponse?.data.novels || null,
            novelsHighlyRated: novelsResponse?.data.novels || null,

            novelsJustCompleted: novelsResponse?.data.novels || null,

            novelsLatestReviews: reviewsResponse?.data.reviews || null,
        },
        revalidate: REVALIDATE_TIME
    }
}

// export const getServerSideProps : GetServerSideProps = async () => {

//     const novelsResponse = await getNovelsByPageHandle("1");
//     const reviewsResponse = await getReviewsByLatestHandle("1")

//     return {
//         props: {
//             novelsOutstending: novelsResponse?.data.novels || null,
//             novelsJustUpdated: novelsResponse?.data.novels || null,
//             novelsReading: novelsResponse?.data.novels || null,
//             novelsHighlyRated: novelsResponse?.data.novels || null,

//             novelsJustCompleted: novelsResponse?.data.novels || null,

//             novelsLatestReviews: reviewsResponse?.data.reviews || null,
//         },
//         // revalidate: REVALIDATE_TIME
//     }
// }

HomePage.getLayout = (page : ReactNode) => {
    return (
        <MainLayout isBannerPage={true}>{page}</MainLayout>
    )
}

export default HomePage